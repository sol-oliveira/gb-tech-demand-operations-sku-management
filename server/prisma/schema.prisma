// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"  
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  githubId  Int    @unique
  name      String
  login     String
  avatarUrl String
}

model Product {
  id     Int     @id @default(autoincrement())
  name    String
  description String
  brand   String 
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  userCreate String
  userUpdate String?  

  skus       SKU[] // Campo de relação reversa exigencia do Prisma
  @@map("products")
  
}

model Packaging {
  id       Int    @id @default(autoincrement())
  material String  
  type     String 
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  userCreate String
  userUpdate String?  

   skus       SKU[] // Campo de relação reversa exigencia do Prisma
  @@map("packagings")

}

model Volumetry {
  id       Int    @id @default(autoincrement())
  value    Float
  unit     String 
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  userCreate String
  userUpdate String?

  skus       SKU[] // Campo de relação reversa exigencia do Prisma
  @@map("volumetries")

}

model Composition {
  id                Int      @id @default(autoincrement())
  formula           String
  keyIngredients    String
  createdAt         DateTime @default(now())
  updatedAt         DateTime? @updatedAt
  userCreate        String
  userUpdate        String?

  skus       SKU[] // Campo de relação reversa exigencia do Prisma
  @@map("compositions")

}

model SKU {
  id                 String      @id @default(uuid())
  productId          Int
  skuCode            String
  description        String
  commercialDescription String
  status             String

  compositionId      Int
  volumetryId        Int
  packagingId        Int

  createdAt          DateTime    @default(now())
  updatedAt          DateTime?   @updatedAt
  userCreate         String
  userUpdate         String? 

  product           Product     @relation(fields: [productId], references: [id])
  composition       Composition @relation(fields: [compositionId], references: [id])
  volumetry         Volumetry   @relation(fields: [volumetryId], references: [id])
  packaging         Packaging   @relation(fields: [packagingId], references: [id])

  @@map("skus")
}